{"version":3,"sources":["VirtualDice.js","PointCalc.js","serviceWorker.js","index.js"],"names":["Dice","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dice1","throwSingle","dice2","setState","_this2","diceResult","sum","start","react_default","a","createElement","Col","xs","md","Button","variant","onClick","rethrow","Math","floor","random","Component","kiriage","value","ceil","Result","props","error","han","fu","className","mangan","basic","Board","e","id","target","parseInt","isNaN","console","log","defineProperty","Form","Control","type","defaultValue","onChange","handleChange","base","pow","makeBasicPoint","xl","Row","Label","makeTextBox","Boolean","window","location","hostname","match","ReactDOM","render","Container","PointCalc","VirtualDice","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.279d5432.chunk.js","sourcesContent":["import {Button, Col} from \"react-bootstrap\";\r\nimport React, {Component} from 'react';\r\n\r\n\r\nclass Dice extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dice1: Dice.throwSingle(),\r\n            dice2: Dice.throwSingle(),\r\n        };\r\n    }\r\n\r\n    static throwSingle() {\r\n        return Math.floor(Math.random() * 5) + 1\r\n    }\r\n\r\n    rethrow() {\r\n        this.setState({\r\n            dice1: Dice.throwSingle(),\r\n            dice2: Dice.throwSingle(),\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let diceResult = this.state.dice1 + \", \" + this.state.dice2;\r\n        let sum = this.state.dice1 + this.state.dice2;\r\n        let start = \"\";\r\n\r\n        switch (sum % 4) {\r\n            case 0:\r\n                start = \"自家\";\r\n                break;\r\n            case 1:\r\n                start = \"下家\";\r\n                break;\r\n            case 2:\r\n                start = \"对家\";\r\n                break;\r\n            case 3:\r\n                start = \"上家\";\r\n                break;\r\n            default:\r\n        }\r\n        return (\r\n            <Col xs={6} md={6}>\r\n                <h2>模拟骰子</h2>\r\n                <p>{diceResult + ' = ' + sum}</p>\r\n                <p>{start}</p>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => this.rethrow()}>再掷一组</Button>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dice;","import React, {Component} from 'react';\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\r\nimport Dice from './VirtualDice';\r\n\r\n\r\nfunction makeBasicPoint(han, fu) {\r\n    if (fu !== 25) {\r\n        fu = Math.ceil(fu / 10) * 10; //除非25符（七对子），把符无条件进位到十位\r\n    }\r\n    if (han > 13) han = 13; //累计役满\r\n    if (fu < 20 || fu > 110) return 0;\r\n    var base;\r\n    switch (han) {\r\n        case 13:\r\n            return 8000; //累计役满\r\n        case 12:\r\n        case 11:\r\n            return 6000; //三倍满\r\n        case 10:\r\n        case 9:\r\n        case 8:\r\n            return 4000; //倍满\r\n        case 7:\r\n        case 6:\r\n            return 3000; //跳满\r\n        case 5:\r\n            return 2000; //满贯\r\n        case 4:\r\n        case 3:\r\n        case 2:\r\n        case 1:\r\n            base = fu * Math.pow(2, han + 2); //基本公式\r\n            return base > 2000 ? 2000 : base; //满贯判断\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nfunction kiriage(value) {\r\n    return Math.ceil(value / 100) * 100; //无条件进位至百位\r\n}\r\n\r\nfunction Result(props) {\r\n    let error = \"\";\r\n    //因为翻>=5的话不用看符也即可算出点数，这个时候就不做出错处理了\r\n    if (props.han < 5) {\r\n        if (props.fu < 20 || props.fu > 110 || props.fu % 2 !== 0) {\r\n            error += \"\\n符应位于区间 [20,110] 且为偶数（除25符七对子外）\";\r\n        }\r\n        if (props.han < 1) {\r\n            error += \"\\n翻应大于等于 1\";\r\n        }\r\n        if (props.fu === 25) {\r\n            if (props.han < 1) {\r\n                error = \"25符七对子时翻应大于等于 2\"\r\n            } else {\r\n                error = \"\";\r\n            }\r\n        }\r\n    }\r\n    if (error === \"\") {\r\n        return (\r\n            <div className=\"result\">\r\n                <p>{props.fu === 25 ? 25 : Math.ceil(props.fu / 10) * 10}符 {props.han}翻 {props.mangan}，基本点为 {props.basic}</p>\r\n                <p>庄家</p>\r\n                <p>荣和 {kiriage(props.basic * 6)}，自摸 {kiriage(props.basic * 2)} ALL\r\n                    = {kiriage(props.basic * 2) * 3}</p>\r\n                <p>闲家</p>\r\n                <p>荣和 {kiriage(props.basic * 4)}，自摸 {kiriage(props.basic)},{kiriage(props.basic * 2)}\r\n                    &nbsp;= {kiriage(props.basic) * 2 + kiriage(props.basic * 2)}</p>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            您的输入有误：<br/>\r\n            {error}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Board extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            han: 4,\r\n            fu: 30,\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        let id = e.target.id;\r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value) || typeof (value) == \"undefined\") return;\r\n        console.log(id + \" \" + value);\r\n        this.setState({[id]: value});\r\n    }\r\n\r\n    makeTextBox(id, value) {\r\n        return <Form.Control\r\n            type=\"text\"\r\n            id={id}\r\n            defaultValue={value}\r\n            onChange={(e) => this.handleChange(e)}\r\n        />;\r\n    }\r\n\r\n\r\n    render() {\r\n        let han = this.state.han;\r\n        let fu = this.state.fu;\r\n        let basic = makeBasicPoint(han, fu);\r\n        let mangan = \"\";\r\n        switch (basic) {\r\n            case 2000:\r\n                mangan = \"满贯\";\r\n                break;\r\n            case 3000:\r\n                mangan = \"跳满\";\r\n                break;\r\n            case 4000:\r\n                mangan = \"倍满\";\r\n                break;\r\n            case 6000:\r\n                mangan = \"三倍满\";\r\n                break;\r\n            case 8000:\r\n                mangan = \"累计役满\";\r\n                break;\r\n            default:\r\n        }\r\n        return (\r\n\r\n            <Col xs={12} md={6} xl={4}>\r\n                <h2>快速点数计算</h2>\r\n                <Form>\r\n                    <Row><Col xs={6} md={6}>\r\n                        <Form.Label>符数</Form.Label>\r\n                        {this.makeTextBox(\"fu\", fu)}\r\n                    </Col><Col xs={6} md={6}>\r\n                        <Form.Label>翻数</Form.Label>\r\n                        {this.makeTextBox(\"han\", han)}\r\n                    </Col></Row>\r\n                </Form>\r\n                <Result\r\n                    fu={fu}\r\n                    han={han}\r\n                    mangan={mangan}\r\n                    basic={basic}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CalcBoard from './PointCalc'\nimport * as serviceWorker from './serviceWorker';\nimport {Container, Row} from \"react-bootstrap\";\nimport Dice from \"./VirtualDice\";\n\nfunction RealBoard() {\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <h1>日本麻将工具集</h1></Row>\n                <Row>\n                    <CalcBoard/>\n                    <Dice/>\n                </Row>\n            </Container>\n        </div>\n\n    );\n}\n\nReactDOM.render(<RealBoard/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}